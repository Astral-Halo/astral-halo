---
import { articleConfig } from '@/config';
import '@/styles/article.scss';
import License from '@components/License.astro';
import PostInfo from '@components/PostInfo.astro';
import ProfileCard from '@components/widgets/ProfileCard.astro';
import TOC from '@components/widgets/TOC.astro';
import GridLayout from '@layouts/GridLayout.astro';
import { countWords } from '@utils/content-utils';
import { getCollection, render } from 'astro:content';

export async function getStaticPaths() {
  const articles = await getCollection('posts');
  return articles.map((article) => ({
    params: { article: article.data.abbrlink },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content, headings } = await render(article);

const wordCount = countWords(article.body || '');
---

<GridLayout>
  <Fragment slot="header-content">
    <PostInfo
      title={article.data.title}
      publishedAt={article.data.published}
      category={article.data.category}
      tags={article.data.tags}
      wordCount={wordCount}
      class="mx-2 mt-4"
    />
  </Fragment>
  <div class="theme-card-bg theme-border rounded-xl border-2 px-6 py-4">
    <article>
      <Content />
    </article>
    <License time={article.data.published} />
  </div>
  <Fragment slot="aside-fixed">
    <ProfileCard />
  </Fragment>
  <Fragment slot="aside-sticky">
    {articleConfig.toc && <TOC headings={headings} />}
  </Fragment>
</GridLayout>
