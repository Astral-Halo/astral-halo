---
import { siteConfig } from '@/config';
import License from '@components/misc/License.astro';
import PostInfo from '@components/misc/PostInfo.astro';
import ImageWrapper from '@components/utils/ImageWrapper.astro';
import Markdown from '@components/utils/Markdown.astro';
import PostPageLayout from '@layouts/PostPageLayout.astro';
import { getCollection, render } from 'astro:content';
import path from 'path';

export async function getStaticPaths() {
  const articles = await getCollection('posts');
  return articles.map((article) => ({
    params: { article: article.data.slug },
    props: { article },
  }));
}

const { article } = Astro.props;
const { Content, headings, remarkPluginFrontmatter } = await render(article);
const hasCover =
  article.data.cover !== '' && article.data.cover !== undefined && article.data.cover !== null;

const description = article.data.description || remarkPluginFrontmatter.excerpt;
const basePath = path.join('content/posts/', article.id);
---

<PostPageLayout
  title={article.data.title}
  description={description}
  headings={headings}
  comment={article.data.comment}
  lang={article.data.lang}
  banner={hasCover ? { src: article.data.cover, basePath: basePath } : undefined}
>
  <Fragment slot="header-content">
    <PostInfo
      title={article.data.title}
      publishedAt={article.data.published}
      category={article.data.category}
      tags={article.data.tags}
      wordsCount={remarkPluginFrontmatter.words}
      readingTime={remarkPluginFrontmatter.minutes}
      lang={article.data.lang}
      class="mx-2 mt-4"
    />
  </Fragment>
  {
    siteConfig.banner === false && hasCover && (
      <ImageWrapper
        src={article.data.cover}
        class="mb-6 rounded-xl shadow"
        alt={article.data.title}
        basePath={basePath}
      />
    )
  }
  <Markdown>
    <Content />
  </Markdown>
  <License time={article.data.published} lang={article.data.lang} />
</PostPageLayout>
