---
import { getSortedPosts } from '@utils/content-utils';
import PostPage from '@components/PostPage.astro';
import { siteConfig } from '@/config';
import GridLayout from '@layouts/GridLayout.astro';
import ProfileCard from '@components/widgets/ProfileCard.astro';

export async function getStaticPaths() {
  const posts = await getSortedPosts();
  const tags = [...new Set(posts.map((post) => post.data.tags).flat())];
  return tags
    .map((tag) => {
      const tagPosts = posts.filter((post) => post.data.tags.includes(tag));
      const pageNum = Math.ceil(tagPosts.length / siteConfig.postsPerPage);
      tag = tag.replaceAll(/[\\/]/g, '-');
      return Array.from({ length: pageNum }, (_, i) => ({
        params: { tag: encodeURIComponent(tag), page: (i + 1).toString() },
        props: {
          posts: tagPosts.slice(i * siteConfig.postsPerPage, (i + 1) * siteConfig.postsPerPage),
          currentPage: i + 1,
        },
      }));
    })
    .flat();
}

const { posts, currentPage } = Astro.props;
const { tag } = Astro.params;
---

<GridLayout>
  <PostPage posts={posts} currentPage={currentPage} baseUrl={`/archives/tags/${tag}`} />
  <Fragment slot="aside">
    <ProfileCard />
  </Fragment>
</GridLayout>
