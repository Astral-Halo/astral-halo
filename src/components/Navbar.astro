---
import { navbarConfig } from '@/config';
import { i18n } from '@i18n/translation';
import { Icon } from 'astro-icon/components';
import Button from './widgets/Button.astro';

interface Props {
  title?: string;
  lang?: string;
}
let { title } = Astro.props;
if (!title) title = 'Astral Halo';
---

<div
  id="navbar"
  transition:persist
  class="theme-border theme-card-bg fixed z-30 flex h-16 w-full items-center border-b-2"
>
  <div id="nav-left" class="mr-auto flex w-fit">
    <Button id="site-name" href="/" class="group">
      <span class="text-xl font-bold duration-300 group-hover:opacity-0">{title}</span>
      <Icon
        name="material-symbols:home-rounded"
        class="absolute text-3xl opacity-0 duration-300 group-hover:opacity-100"
      />
    </Button>
  </div>
  <div id="nav-center" class="m-auto flex w-fit max-md:hidden">
    {
      navbarConfig.navbarCenterItems.map((item) => (
        <Button
          {...('href' in item && item.href && { href: item.href })}
          title={i18n(item.text)}
          class="!px-4"
        >
          <span class="text-xl tracking-wide">{i18n(item.text)}</span>
        </Button>
      ))
    }
  </div>
  <div id="nav-right" class="ml-auto flex w-fit">
    <div class="flex max-md:hidden">
      {
        navbarConfig.navbarRightItems.onlyWide.map((item) => (
          <Button
            class="nav-menu-item"
            {...('href' in item && item.href && { href: item.href })}
            title={i18n(item.text)}
            {...('onclick' in item &&
              item.onclick &&
              (typeof item.onclick === 'string'
                ? { onclick: item.onclick }
                : { id: 'nav-' + item.onclick.id }))}
          >
            <Icon name={item.icon} class="text-2xl" />
          </Button>
        ))
      }
    </div>
    <div class="flex">
      {
        navbarConfig.navbarRightItems.always.map((item) => (
          <Button
            class="nav-menu-item"
            {...('href' in item && item.href && { href: item.href })}
            title={i18n(item.text)}
            {...('onclick' in item &&
              item.onclick &&
              (typeof item.onclick === 'string'
                ? { onclick: item.onclick }
                : { id: 'nav-' + item.onclick.id }))}
          >
            <Icon name={item.icon} class="text-2xl" />
          </Button>
        ))
      }
    </div>
    <div class="flex md:hidden">
      <Button id="nav-toggle-sidebar-btn">
        <Icon name="material-symbols:menu-rounded" class="text-2xl" />
      </Button>
    </div>
  </div>
</div>
<div id="navbar-placeholder" class="pt-20"></div>

<script>
  import { navbarConfig } from '@/config';
  const rightItems = [
    navbarConfig.navbarRightItems.onlyWide,
    navbarConfig.navbarRightItems.always,
  ].flat();

  document.addEventListener('astro:page-load', () => {
    rightItems.forEach((item) => {
      if ('onclick' in item && item.onclick && typeof item.onclick !== 'string') {
        const element = document.getElementById('nav-' + item.onclick.id);
        if (element) element.addEventListener('click', item.onclick.function);
      }
    });
  });
</script>
