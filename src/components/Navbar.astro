---
import { navbarConfig } from '@/config';

import { Icon } from 'astro-icon/components';

import Button from './widgets/Button.astro';

interface Props {
  title?: string;
  lang?: string;
}
let { title } = Astro.props;
if (!title) title = 'Astral Halo';
---

<div
  id="navbar"
  transition:persist
  class="flex fixed w-full h-16 items-center border-b-2 theme-border theme-card-bg"
>
  <div id="nav-left" class="left-0 flex mr-auto w-fit">
    <Button id="site-name" href="/">
      <span class="text-xl font-bold">{title}</span>
    </Button>
  </div>
  <div id="nav-center" class="left-0 flex m-auto w-fit max-md:hidden">
    {
      navbarConfig.navbarCenterItems.map((item) => (
        <Button
          href={item.href}
          onclick={item.onclick}
          title={item.text}
          class="nav-menu-item !px-4"
        >
          <span class="text-xl tracking-wide">{item.text}</span>
        </Button>
      ))
    }
  </div>
  <div id="nav-right" class="left-0 flex ml-auto w-fit">
    <div class="flex max-md:hidden">
      {
        navbarConfig.navbarRightItems.onlyWide.map((item) => (
          <Button
            class="nav-menu-item"
            href={item.href}
            onclick={item.onclick}
            title={item.text}
          >
            <Icon name={item.icon} class="text-2xl" />
          </Button>
        ))
      }
    </div>
    <div class="flex">
      {
        navbarConfig.navbarRightItems.always.map((item) => (
          <Button
            class="nav-menu-item"
            href={item.href}
            onclick={item.onclick}
            title={item.text}
          >
            <Icon name={item.icon} class="text-2xl" />
          </Button>
        ))
      }
    </div>
    <div class="flex md:hidden">
      <Button id="nav-toggle-sidebar-btn">
        <Icon name="material-symbols:menu-rounded" class="text-2xl" />
      </Button>
    </div>
  </div>
</div>
<div id="navbar-placeholder" class="pt-20"></div>
