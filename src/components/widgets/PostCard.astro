---
import MetaIcon from './MetaIcon.astro';
import PostCardCover from './PostCardCover.astro';
import ReadMoreButton from './ReadMoreButton.astro';

interface Props {
  class?: string;
  title: string;
  url: string;
  published: Date;
  updated?: Date;
  tags: string[];
  category?: string;
  cover?: string;
  description: string;
}

const { title, url, published, updated, tags, category, cover } = Astro.props;
const className = Astro.props.class;

const hasCover = cover !== '' && cover !== undefined && cover !== null;

const metas: ({ icon: string; text: string; link?: string } | undefined)[] = [
  {
    icon: 'material-symbols:calendar-clock-outline-rounded',
    text: published.toLocaleDateString(),
  },
  updated && {
    icon: 'material-symbols:edit-calendar-outline-rounded',
    text: updated.toLocaleDateString(),
  },
  category
    ? {
        icon: 'material-symbols:category-outline-rounded',
        text: category,
        link: `/archives/categories/${category.replaceAll(/[\\/]/g, '-')}/1/`,
      }
    : undefined,
  ...tags.map((tag) => {
    return {
      icon: 'material-symbols:tag-rounded',
      text: tag,
      link: `/archives/tags/${tag.replaceAll(/[\\/]/g, '-')}/1/`,
    };
  }),
];
---

<div
  class:list={[
    'theme-card-bg theme-border',
    'flex w-full rounded-xl border-2 p-4 max-md:flex-col-reverse',
    className,
  ]}
>
  <div class="mr-auto h-full w-full items-center px-12 py-7">
    <div class="mb-5 text-2xl"><a href={url}>{title}</a></div>
    <div class="theme-text-second mb-3 flex flex-wrap items-center gap-x-4 gap-y-2">
      {
        metas.map((meta) => {
          return (
            meta && (
              <div class="flex items-center gap-1">
                <MetaIcon name={meta.icon} />
                {meta.link ? (
                  <a href={meta.link} class="meta-text" title={meta.text}>
                    {meta.text}
                  </a>
                ) : (
                  <span class="meta-text">{meta.text}</span>
                )}
              </div>
            )
          );
        })
      }
    </div>
  </div>
  {
    hasCover ? (
      <PostCardCover url={url} title={title} cover={cover} />
    ) : (
      <ReadMoreButton href={url} title={title} />
    )
  }
</div>

<style>
  .meta-text {
    @apply text-sm font-medium;
  }

  a.meta-text {
    @apply duration-100 hover:brightness-125;
  }
</style>
