---
import MetaIcon from './MetaIcon.astro';
import PostCardCover from './PostCardCover.astro';
import ReadMoreButton from './ReadMoreButton.astro';

interface Props {
  class?: string;
  title: string;
  url: string;
  published: Date;
  updated?: Date;
  tags: string[];
  category?: string;
  cover?: string;
  description: string;
}

const { title, url, published, updated, tags, category, cover } = Astro.props;
const className = Astro.props.class;

const hasCover = cover !== '' && cover !== undefined && cover !== null;

const metas: ({ icon: string; text: string; link?: string } | undefined)[] = [
  {
    icon: 'material-symbols:calendar-clock-outline-rounded',
    text: published.toLocaleDateString(),
  },
  updated && {
    icon: 'material-symbols:edit-calendar-outline-rounded',
    text: updated.toLocaleDateString(),
  },
  category
    ? {
        icon: 'material-symbols:category-outline-rounded',
        text: category,
        link: `/archives/categories/${category.replaceAll(/[\\/]/g, '-')}/1/`,
      }
    : undefined,
  ...tags.map((tag) => {
    return {
      icon: 'material-symbols:tag-rounded',
      text: tag,
      link: `/archives/tags/${tag.replaceAll(/[\\/]/g, '-')}/1/`,
    };
  }),
];
---

<div
  class:list={[
    'card card-bordered border-base-300 md:card-side flex w-full border-2 max-md:flex-col-reverse',
    className,
  ]}
>
  <div class="card-body">
    <a href={url} class="card-title">{title}</a>
    <div class="text-base-content/60 mb-3 flex flex-wrap items-center gap-x-4 gap-y-2 text-sm">
      {
        metas.map((meta) => {
          return (
            meta && (
              <div class="flex items-center gap-1">
                <MetaIcon name={meta.icon} />
                {meta.link ? (
                  <a href={meta.link} class="meta-text" title={meta.text}>
                    {meta.text}
                  </a>
                ) : (
                  <span class="meta-text">{meta.text}</span>
                )}
              </div>
            )
          );
        })
      }
    </div>
  </div>
  {
    hasCover ? (
      <figure class="md:w-3/4 md:max-w-96">
        <PostCardCover url={url} title={title} cover={cover} />
      </figure>
    ) : (
      <figure>
        <ReadMoreButton href={url} title={title} />
      </figure>
    )
  }
</div>
