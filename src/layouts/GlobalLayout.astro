---
import { profileConfig, siteConfig } from '@/config';
import '@/styles/global.css';
import type { Favicon } from '@/types/config';
import { defaultFavicons } from '@constants/icon';
import { ClientRouter } from 'astro:transitions';

interface Props {
  title?: string;
  description?: string;
  lang?: string;
}

let { title, lang, description } = Astro.props;

let pageTitle: string;
if (title) pageTitle = `${title} - ${siteConfig.title}`;
else
  pageTitle = `${siteConfig.title}${siteConfig.subtitle.length > 0 ? ` - ${siteConfig.subtitle}` : ''}`;

if (!lang) lang = `${siteConfig.lang}`;
const siteLang = lang.replace('_', '-');

const favicons: Favicon[] =
  siteConfig.favicon.length > 0 ? siteConfig.favicon : defaultFavicons;
---

<!doctype html>
<html lang={siteLang}>
  <head>
    <title>{pageTitle}</title>

    <meta charset="UTF-8" />
    <meta name="author" content={profileConfig.name} />

    <ClientRouter />

    <!-- Open Graph / Facebook -->
    <meta property="og:site_name" content={siteConfig.title} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={description || pageTitle} />

    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={description || pageTitle} />

    <meta name="viewport" content="width=device-width" />

    <meta name="generator" content={Astro.generator} />

    {
      favicons.map((favicon) => (
        <link
          rel="icon"
          href={
            favicon.src.startsWith('/')
              ? ['', import.meta.env.BASE_URL, favicon.src].join('/').replace(/\/+/g, '/')
              : favicon.src
          }
          sizes={favicon.sizes}
        />
      ))
    }

    <link
      rel="alternate"
      type="application/rss+xml"
      title={siteConfig.title}
      href={new URL('rss.xml', Astro.site)}
    />

    <slot name="head" />
  </head>
  <body class="bg-base-100 text-base-content flex min-h-screen flex-col">
    <slot />
  </body>
</html>

<script>
  import { convertTimeToRelative } from '@scripts/utils';

  // 深色模式切换
  function applyDarkMode() {
    if (
      localStorage.darkMode === 'true' ||
      (!('darkMode' in localStorage) &&
        window.matchMedia('(prefers-color-scheme: dark)').matches)
    ) {
      document.documentElement.setAttribute('data-theme', 'dark');
    } else document.documentElement.setAttribute('data-theme', 'light');
  }
  document.addEventListener('astro:after-swap', applyDarkMode);
  applyDarkMode();

  // 时间显示
  document.addEventListener('astro:page-load', convertTimeToRelative);
</script>
